version: '3'

services:
  backend:
    container_name: reckitt_php
    build:
      context: ./
      dockerfile: ./docker/php/dockerfile
    restart: unless-stopped
    tty: true
    depends_on:
        - pgsql
        - redis
    volumes:
        -   ./:/var/www
    networks:
        - app-network

  webserver:
      image: nginx:1.23.2
      container_name: reckitt_webserver
      restart: unless-stopped
      tty: true
      ports:
          - '${FORWARD_NGINX_PORT:-80}:80'
      depends_on:
          - backend
      volumes:
          - ./:/var/www
          - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
          - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      networks:
          - app-network

  pgsql:
    image: 'postgres:15.2-alpine'
    container_name: reckitt_postgres
    restart: unless-stopped
    environment:
        POSTGRES_DB: mafia
        POSTGRES_USER: reckitt
        POSTGRES_PASSWORD: password
    ports:
        - '${FORWARD_DB_PORT:-5432}:5432'
    volumes:
        - 'pgsql:/var/lib/postgresql/data'
    networks:
        - app-network
    healthcheck:
        test: [ "CMD", "pg_isready", "-q", "-d", "reckitt", "-U", "reckitt" ]
        retries: 3
        timeout: 5s

  redis:
      image: redis
      container_name: reckitt_redis
      restart: unless-stopped
      command: redis-server --requirepass '${REDIS_PASSWORD}'
      ports:
          - '${FORWARD_REDIS_PORT:-6379}:6379'
      networks:
          - app-network

  node:
      build:
          context: .
          dockerfile: ./docker/nodejs/dockerfile
      tty: true
      ports:
          - "5173:5173"
      working_dir: /var/www
      volumes:
          - .:/var/www

  composer:
      build:
          context: .
          dockerfile: ./docker/php/composer/dockerfile
      tty: true
      working_dir: /var/www
      volumes:
          - .:/var/www

networks:
    app-network:
        driver: bridge

volumes:
    pgsql:
        driver: local

